@using autochat_blazorapp.Data
@using autochat_blazorapp.Models
@using autochat_blazorapp.Common
@using Microsoft.AspNetCore.Http
@inject AccountContext Context
@inject IHttpContextAccessor httpContextAccessor

@if (isLogined)
{
    <span> UserId: </span>
    <b>@account.Id</b>
    <span type="@account" />
    <span> Logined </span>

    <input type="button" value="Logout" @onclick="@Logout" />
}
else
{
    <div>
        <span>Id</span>
        <input type="text" @bind="account.Id" />
        <span>Password</span>
        <input type="password" @bind="account.Password" />
    </div>


    <input type="button" value="Login" @onclick="@Login" />

    <NavLink class="nav-link" href="/account/create" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"></span> Join
    </NavLink>


}

@code {
    Account account = new Account();
    bool isLogined = false;

    protected override void OnInitialized()
    {
        if (httpContextAccessor.HttpContext.Items
    .TryGetValue(HttpContextItemsMiddleware.HttpContextItemsMiddlewareKey,
        out var middlewareSetValue))
        {
            account.UserName = Convert.ToString(middlewareSetValue);
            this.isLogined = true;
        }
        else
        {
            this.isLogined = false;
        }
    }

    void Login()
    {
        if (string.IsNullOrWhiteSpace(account.Id) || string.IsNullOrWhiteSpace(account.Password)) return;

        var findUser = Context.Account.FirstOrDefault(x => x.Id.Equals(account.Id) && x.Password.Equals(account.Password));

        if (findUser != null)
        {
            //true
            this.isLogined = true;
            this.account = findUser;

            httpContextAccessor.HttpContext.Items[HttpContextItemsMiddleware.HttpContextItemsMiddlewareKey] = account.Id;
            // httpContextAccessor.HttpContext.Session.SetString(AccountIdString, account.Id);
            // httpContextAccessor.HttpContext.Session.SetString(AccountUserNameString, account.UserName);

            StateHasChanged();

            return;
        }
        else
        {

        }
    }

    void Logout()
    {
        this.isLogined = false;
        account.Password = "";
        account.UserName = "";

        httpContextAccessor.HttpContext.Items[HttpContextItemsMiddleware.HttpContextItemsMiddlewareKey] = "";
    }
}
